import express from 'express'
import mysql from 'mysql'
import cors from 'cors'
import cookieParser from 'cookie-parser'
import bcrypt, { hash } from 'bcrypt'
import jwt from 'jsonwebtoken'
import multer from 'multer'
import path from 'path'

const app = express();
app.use(cors());
app.use(cookieParser());
app.use(express.json());

const con = mysql.createConnection({
    host: "localhost",
    user: "root",
    password: "",
    database: "employeemanag",
})

const storage = multer.diskStorage({
    destination: (req, file, cb)=>{
        cb(null, 'public/images')
    },
    filename:(req, file, cb)=>{
        cb(null, file.fieldname + '_' + Date.now() + path.extname(file.originalname))
    },
})

const upload = multer({
    storage: storage,
})

con.connect(function(err){
    if(err){
        console.log("error in connection");
    }
    else{
        console.log("connected");
    }
})

app.post('/login', (req, res) =>{
    const sql = "SELECT * FROM user WHERE email= ? AND password = ?"
    con.query(sql, [req.body.user, req.body.psw], (err, result)=>{
        if(err) return res.json({Status: "error", Error: "error in running query"});
        if(result.length > 0) return res.json({Status: "success"})
        else return res.json({Status: "error", Error: "wrong email or password"})
    })
})

app.post('/creat', upload.single('image'), (req, res) => {
    // Assuming that you have a table 'employee' in your database
    const sql = "INSERT INTO employee (name, email, password, address, image) VALUES (?, ?, ?, ?, ?)";
    
    const { name, email, password, address } = req.body;
    
    bcrypt.hash(password.toString(), 10, (err, hashed) => {
        if (err) {
            console.error(err);
            return res.json({ Status: "error", Error: "error hashing password" });
        }
        
        const image = req.file.filename; // Use the filename generated by Multer
        const values = [name, email, hashed, address, image];
        
        con.query(sql, values, (err, result) => {
            if (err) {
                console.error(err);
                return res.json({ Status: "error", Error: "error in running query" });
            }
            
            if (result.affectedRows > 0) {
                console.log("Insertion is a Success!!!!!!\n");
                return res.json({ Status: "success" });
            } else {
                console.error(err);
                return res.json({ Status: "error", Error: "Insertion failed" });
            }
        });
    });
});

   

app.listen(8081, ()=> {
    console.log("running");
})